#include <stdio.h>

int main() {
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4, 2};
    int n = sizeof(pages) / sizeof(pages[0]);
    int frame_size = 3;
    int frames[3] = {-1, -1, -1};  // Memory frames
    int time[3];                   // Track last used time
    int count = 0, page_faults = 0, timer = 0;

    for (int i = 0; i < n; i++) {
        int found = 0;

        // Check if page is already in frames
        for (int j = 0; j < frame_size; j++) {
            if (frames[j] == pages[i]) {
                found = 1;
                time[j] = ++timer;  // Update time
                break;
            }
        }

        if (!found) {
            int pos;

            if (count < frame_size) {
                pos = count++;
            } else {
                // Find the Least Recently Used position
                int min = time[0];
                pos = 0;
                for (int j = 1; j < frame_size; j++) {
                    if (time[j] < min) {
                        min = time[j];
                        pos = j;
                    }
                }
            }

            frames[pos] = pages[i];
            time[pos] = ++timer;
            page_faults++;
        }
    }

    printf("Total Page Faults using LRU: %d\n", page_faults);
    return 0;
}
