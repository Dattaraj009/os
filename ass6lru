#include <stdio.h>

int main() {
    int pages[] = {7, 0, 1, 2, 0, 3, 0, 4};
    int n = 8;
    int capacity = 3;
    int frames[3], time[3];
    int count = 0, faults = 0, currentTime = 0;

    printf("LRU Page Replacement:\n");

    for (int i = 0; i < n; i++) {
        int found = 0;

        // Check if page is already in frames
        for (int j = 0; j < count; j++) {
            if (frames[j] == pages[i]) {
                found = 1;
                time[j] = currentTime++; // Update recent use time
                break;
            }
        }

        // If not found, page fault occurs
        if (!found) {
            if (count < capacity) {
                frames[count] = pages[i];
                time[count] = currentTime++;
                count++;
            } else {
                // Find least recently used page
                int lru = 0;
                for (int j = 1; j < capacity; j++) {
                    if (time[j] < time[lru])
                        lru = j;
                }
                frames[lru] = pages[i];
                time[lru] = currentTime++;
            }
            faults++;
        }

        // Print frames
        printf("Frames: ");
        for (int j = 0; j < count; j++)
            printf("%d ", frames[j]);
        printf("\n");
    }

    printf("Total Page Faults: %d\n", faults);
    return 0;
}
